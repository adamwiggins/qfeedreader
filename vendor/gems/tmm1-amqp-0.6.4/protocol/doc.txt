["connected"]

["send_data", "AMQP"]

["send_data", "\001\001\b\000"]

["receive_data",
 "\001\000\000\000\000\001&\000\n\000\n\b\000\000\000\001\001\aproductS\000\000\000\bRabbitMQ\aversionS\000\000\000\v%%VERSION%%\bplatformS\000\000\000\nErlang/OTP\tcopyrightS\000\000\000gCopyright (C) 2007-2008 LShift Ltd., Cohesive Financial Technologies LLC., and Rabbit Technologies Ltd.\vinformationS\000\000\0005Licensed under the MPL.  See http://www.rabbitmq.com/\000\000\000\016PLAIN AMQPLAIN\000\000\000\005en_US\316"]

["receive",
 #<AMQP::Frame::Method:0x11b90d0
  @channel=0,
  @payload=
   #<AMQP::Protocol::Connection::Start:0x11b8d38
    @debug=1,
    @locales="en_US",
    @mechanisms="PLAIN AMQPLAIN",
    @server_properties=
     {:information=>"Licensed under the MPL.  See http://www.rabbitmq.com/",
      :copyright=>
       "Copyright (C) 2007-2008 LShift Ltd., Cohesive Financial Technologies LLC., and Rabbit Technologies Ltd.",
      :platform=>"Erlang/OTP",
      :version=>"%%VERSION%%",
      :product=>"RabbitMQ"},
    @version_major=8,
    @version_minor=0>>]

["send",
 #<AMQP::Frame::Method:0x11a3078
  @channel=0,
  @payload=
   #<AMQP::Protocol::Connection::StartOk:0x11a3294
    @client_properties=
     {:information=>"http://github.com/tmm1/amqp",
      :version=>"0.1.0",
      :product=>"AMQP",
      :platform=>"Ruby/EventMachine"},
    @debug=1,
    @locale="en_US",
    @mechanism="AMQPLAIN",
    @response={:LOGIN=>"guest", :PASSWORD=>"guest"}>>]

["send_data",
 "\001\000\000\000\000\000\254\000\n\000\v\000\000\000n\vinformationS\000\000\000\ehttp://github.com/tmm1/amqp\aversionS\000\000\000\0050.1.0\aproductS\000\000\000\004AMQP\bplatformS\000\000\000\021Ruby/EventMachine\bAMQPLAIN\000\000\000#\005LOGINS\000\000\000\005guest\bPASSWORDS\000\000\000\005guest\005en_US\316"]

["receive_data",
 "\001\000\000\000\000\000\f\000\n\000\036\000\000\000\002\000\000\000\000\316"]

["receive",
 #<AMQP::Frame::Method:0x11898e4
  @channel=0,
  @payload=
   #<AMQP::Protocol::Connection::Tune:0x118954c
    @channel_max=0,
    @debug=1,
    @frame_max=131072,
    @heartbeat=0>>]

["send",
 #<AMQP::Frame::Method:0x117fb14
  @channel=0,
  @payload=
   #<AMQP::Protocol::Connection::TuneOk:0x117fd1c
    @channel_max=0,
    @debug=1,
    @frame_max=131072,
    @heartbeat=0>>]

["send_data",
 "\001\000\000\000\000\000\f\000\n\000\037\000\000\000\002\000\000\000\000\316"]

["send",
 #<AMQP::Frame::Method:0x11741d8
  @channel=0,
  @payload=
   #<AMQP::Protocol::Connection::Open:0x1174408
    @capabilities="",
    @debug=1,
    @insist=nil,
    @virtual_host="/">>]

["send_data", "\001\000\000\000\000\000\b\000\n\000(\001/\000\000\316"]

["receive_data",
 "\001\000\000\000\000\000\025\000\n\000)\020julie.local:5672\316"]

["receive",
 #<AMQP::Frame::Method:0x11665ec
  @channel=0,
  @payload=
   #<AMQP::Protocol::Connection::OpenOk:0x1166254
    @debug=1,
    @known_hosts="julie.local:5672">>]

["send",
 #<AMQP::Frame::Method:0x115e950
  @channel=1,
  @payload=
   #<AMQP::Protocol::Channel::Open:0x115ebf8 @debug=1, @out_of_band=nil>>]

["send_data", "\001\000\001\000\000\000\005\000\024\000\n\000\316"]

["receive_data", "\001\000\001\000\000\000\004\000\024\000\v\316"]

["receive",
 #<AMQP::Frame::Method:0x11534d8
  @channel=1,
  @payload=#<AMQP::Protocol::Channel::OpenOk:0x1153140 @debug=1>>]

["send",
 #<AMQP::Frame::Method:0x114d0ec
  @channel=1,
  @payload=
   #<AMQP::Protocol::Access::Request:0x114d434
    @active=true,
    @debug=1,
    @exclusive=nil,
    @passive=nil,
    @read=true,
    @realm="/data",
    @write=true>>]

["send_data", "\001\000\001\000\000\000\v\000\036\000\n\005/data\034\316"]

["receive_data", "\001\000\001\000\000\000\006\000\036\000\v\000e\316"]

["receive",
 #<AMQP::Frame::Method:0x113c9a4
  @channel=1,
  @payload=
   #<AMQP::Protocol::Access::RequestOk:0x113c60c @debug=1, @ticket=101>>]

["send",
 #<AMQP::Frame::Method:0x1135000
  @channel=1,
  @payload=
   #<AMQP::Protocol::Queue::Declare:0x1135460
    @arguments=nil,
    @auto_delete=true,
    @debug=1,
    @durable=nil,
    @exclusive=nil,
    @nowait=nil,
    @passive=nil,
    @queue="",
    @ticket=101>>]

["send_data",
 "\001\000\001\000\000\000\f\0002\000\n\000e\000\b\000\000\000\000\316"]

["receive_data",
 "\001\000\001\000\000\000-\0002\000\v amq.gen-RCSkW3cCvMc1I0wXBcLYSg==\000\000\000\000\000\000\000\000\316"]

["receive",
 #<AMQP::Frame::Method:0x1122838
  @channel=1,
  @payload=
   #<AMQP::Protocol::Queue::DeclareOk:0x11224a0
    @consumer_count=0,
    @debug=1,
    @message_count=0,
    @queue="amq.gen-RCSkW3cCvMc1I0wXBcLYSg==">>]

["send",
 #<AMQP::Frame::Method:0x1118860
  @channel=1,
  @payload=
   #<AMQP::Protocol::Queue::Bind:0x1118ba8
    @arguments=nil,
    @debug=1,
    @exchange="",
    @nowait=nil,
    @queue="amq.gen-RCSkW3cCvMc1I0wXBcLYSg==",
    @routing_key="test_route",
    @ticket=101>>]

["send_data",
 "\001\000\001\000\000\0008\0002\000\024\000e amq.gen-RCSkW3cCvMc1I0wXBcLYSg==\000\ntest_route\000\000\000\000\000\316"]

["receive_data", "\001\000\001\000\000\000\004\0002\000\025\316"]

["receive",
 #<AMQP::Frame::Method:0x1107a4c
  @channel=1,
  @payload=#<AMQP::Protocol::Queue::BindOk:0x11076b4 @debug=1>>]

["send",
 #<AMQP::Frame::Method:0x11015d4
  @channel=1,
  @payload=
   #<AMQP::Protocol::Basic::Consume:0x11019bc
    @consumer_tag=nil,
    @debug=1,
    @exclusive=nil,
    @no_ack=true,
    @no_local=nil,
    @nowait=nil,
    @queue="amq.gen-RCSkW3cCvMc1I0wXBcLYSg==",
    @ticket=101>>]

["send_data",
 "\001\000\001\000\000\000)\000<\000\024\000e amq.gen-RCSkW3cCvMc1I0wXBcLYSg==\000\002\316"]

["receive_data",
 "\001\000\001\000\000\000&\000<\000\025!amq.ctag-wFbDeuYKGEm7tXh8oaE5Qg==\316"]

["receive",
 #<AMQP::Frame::Method:0x5f6cfc
  @channel=1,
  @payload=
   #<AMQP::Protocol::Basic::ConsumeOk:0x5f67e8
    @consumer_tag="amq.ctag-wFbDeuYKGEm7tXh8oaE5Qg==",
    @debug=1>>]

["send",
 #<AMQP::Frame::Method:0x5e3dc8
  @channel=1,
  @payload=
   #<AMQP::Protocol::Basic::Publish:0x5e4264
    @debug=1,
    @exchange="",
    @immediate=nil,
    @mandatory=nil,
    @routing_key="test_route",
    @ticket=101>>]

["send_data",
 "\001\000\001\000\000\000\023\000<\000(\000e\000\ntest_route\000\316"]

["send",
 #<AMQP::Frame::Header:0x5bc994
  @channel=1,
  @payload=
   #<AMQP::Protocol::Header:0x5bcb88
    @klass=AMQP::Protocol::Basic,
    @properties=
     {:delivery_mode=>1,
      :priority=>1,
      :content_type=>"application/octet-stream"},
    @size=15,
    @weight=0>>]

["send_data",
 "\002\000\001\000\000\000)\000<\000\000\000\000\000\000\000\000\000\017\230\000\030application/octet-stream\001\001\316"]

["send", #<AMQP::Frame::Body:0x57cfc4 @channel=1, @payload="this is a test!">]

["send_data", "\003\000\001\000\000\000\017this is a test!\316"]

["receive_data",
 "\001\000\001\000\000\000;\000<\000<!amq.ctag-wFbDeuYKGEm7tXh8oaE5Qg==\000\000\000\000\000\000\000\001\000\000\ntest_route\316\002\000\001\000\000\000)\000<\000\000\000\000\000\000\000\000\000\017\230\000\030application/octet-stream\001\001\316\003\000\001\000\000\000\017this is a test!\316"]

["receive",
 #<AMQP::Frame::Method:0x55cbe8
  @channel=1,
  @payload=
   #<AMQP::Protocol::Basic::Deliver:0x55b810
    @consumer_tag="amq.ctag-wFbDeuYKGEm7tXh8oaE5Qg==",
    @debug=1,
    @delivery_tag=1,
    @exchange="",
    @redelivered=false,
    @routing_key="test_route">>]

["receive",
 #<AMQP::Frame::Header:0x537af0
  @channel=1,
  @payload=
   #<AMQP::Protocol::Header:0x537a28
    @klass=AMQP::Protocol::Basic,
    @properties=
     {:delivery_mode=>1,
      :priority=>1,
      :content_type=>"application/octet-stream"},
    @size=15,
    @weight=0>>]

["receive",
 #<AMQP::Frame::Body:0x505f64 @channel=1, @payload="this is a test!">]

^C["disconnected"]